<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:int-syslog="http://www.springframework.org/schema/integration/syslog"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/syslog http://www.springframework.org/schema/integration/syslog/spring-integration-syslog.xsd">
		
    
    <context:property-placeholder location="file:${perftest.home}/config/redis-transport-perftest.properties" />
    
    <!--  Syslog inbound -->
    
    <int-syslog:inbound-channel-adapter id="adapter" channel="toRedis" protocol="${syslog.protocol:tcp}" port="${syslog.port:11111}"/>
    
	
    <int:channel id="toRedis" />
    
     <bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory">
		<constructor-arg index="0" value="${redis.hostname:localhost}" />
		<constructor-arg index="1" value="${redis.port:6379}" />
		<constructor-arg>
			<bean class="org.springframework.data.redis.connection.lettuce.LettucePool">
				<constructor-arg index="0" value="${redis.hostname:localhost}" />
				<constructor-arg index="1" value="${redis.port:6379}" />
				<constructor-arg>
					<bean class="org.springframework.data.redis.connection.PoolConfig"
						p:maxActive="${redis.pool.maxActive:8}"
						p:maxIdle="${redis.pool.maxIdle:8}"
						p:minIdle="${redis.pool.minIdle:0}" 
						p:maxWait="${redis.pool.maxWait:-1}" 
					    p:whenExhaustedAction="${redis.pool.whenExhaustedAction:false}"
					    p:testOnBorrow="${redis.pool.testOnBorrow:false}"
					    p:testOnReturn="${redis.pool.testOnReturn:false}"
					    p:testWhileIdle="${redis.pool.testWhileIdle:false}"
					    p:timeBetweenEvictionRunsMillis="${redis.pool.timeBetweenEvictionRunsMillis:-1}"
					    p:numTestsPerEvictionRun="${redis.pool.numTestsPerEvictionRun:3}"
					    p:minEvictableIdleTimeMillis="${redis.pool.minEvictableIdleTimeMillis:1800000}"
					    p:softMinEvictableIdleTimeMillis="${redis.pool.softMinEvictableIdleTimeMillis:-1}" />
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>
	
    <bean id="handler" class="org.springframework.xd.perftest.redis.outbound.RedisQOutboundMessageHandler">
		<constructor-arg value="${redis.queue.name:redis-transport-perf}" />
		<constructor-arg ref="redisConnectionFactory" />
	</bean>
	
    <bean id="eventDrivenConsumer" class="org.springframework.integration.endpoint.EventDrivenConsumer">
        <constructor-arg ref="toRedis" />
		<constructor-arg ref="handler" />
    </bean>
    
    <beans profile="default,concurrent">
   		<bean id="redisQInboundAdapter" class="org.springframework.xd.perftest.redis.inbound.RedisQConcurrentConsumer">
			<constructor-arg value="${redis.queue.name:redis-transport-perf}" />
			<constructor-arg ref="redisConnectionFactory" />
			<property name="outputChannel" ref="nullChannel" />
			<property name="extractPayload" value="true" />
			<property name="numListenerThreads" value="${num.listener.threads:1}" />
			<property name="blockingRightPop" value="${is.brpop:false}" />
		</bean>
	</beans>
	
    <beans profile="scheduler">
   		<bean id="redisQInboundAdapter" class="org.springframework.xd.perftest.redis.inbound.RedisQSchedulerConsumer">
			<constructor-arg value="${redis.queue.name:redis-transport-perf}" />
			<constructor-arg ref="redisConnectionFactory" />
			<property name="outputChannel" ref="nullChannel" />
			<property name="extractPayload" value="true" />
			<property name="blockingRightPop" value="${is.brpop:false}" />
		</bean>
	</beans>
</beans>
